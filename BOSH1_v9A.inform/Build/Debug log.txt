Debugging log of Inform 7
Inform called as: ni -noprogress -internal /Applications/Inform.app_old.app/Contents/Resources/Internal/ -external /Users/rileypb/Library/Inform -project BOSH1_v9A.inform/
Found language bundle 'German' (built in)
Found language bundle 'Italian' (built in)
Found language bundle 'English' (built in)
Found language bundle 'French' (built in)
Found language bundle 'Swedish' (built in)
Found language bundle 'Spanish' (built in)
Reading language definition from </Applications/Inform.app_old.app/Contents/Resources/Internal/Languages/English/Syntax.preform>
720 declarations read (14183 words)


-----------------------------------------------------
Phase I ... Lexical analysis
-----------------------------------------------------

I've now read your source text, which is 29406 words long.


-----------------------------------------------------
Phase II ... Semantic analysis Ia
-----------------------------------------------------

I've also read Standard Rules by Graham Nelson, which is 41092 words long.
I've also read English Language by Graham Nelson, which is 2297 words long.
I've also read Epistemology by Eric Eve, which is 1505 words long.
I've also read Conversation Framework by Eric Eve, which is 5227 words long.
I've also read Conversation Responses by Eric Eve, which is 1855 words long.
I've also read Conversational Defaults by Eric Eve, which is 2247 words long.
I've also read Basic Screen Effects by Emily Short, which is 2218 words long.
I've also read Punctuation Removal by Emily Short, which is 906 words long.
I've also read Glulx Text Effects by Emily Short, which is 2182 words long.
I've also read Formatting Capture by Daniel Stelzer, which is 671 words long.
I've also read Locksmith by Emily Short, which is 4122 words long.
I've also read Essentials by Philip Riley, which is 583 words long.
I've also read Facts by Philip Riley, which is 178 words long.
I've also read Phones by Philip Riley, which is 1909 words long.
I've also read Commerce by Philip Riley, which is 160 words long.
I've also read Furniture by Philip Riley, which is 82 words long.
I've also read Third Person Narration by Philip Riley, which is 672 words long.
I've also read Door Utils by Philip Riley, which is 44 words long.
I've also read Real People by Philip Riley, which is 400 words long.
I've also read Visible Rooms by Philip Riley, which is 164 words long.
I've also read Can't Touch This by Philip Riley, which is 168 words long.
I've also read Compound Details by Philip Riley, which is 182 words long.
I've also read Polish by Philip Riley, which is 89 words long.
I've also read Hello by Philip Riley, which is 130 words long.
I've also read BOSH Polish by Philip Riley, which is 8662 words long.
I've also read New Light by Philip Riley, which is 347 words long.
I've also read Early Declarations by Philip Riley, which is 21 words long.
I've also read Basics by Philip Riley, which is 198 words long.
I've also read Building Facades by Philip Riley, which is 167 words long.
I've also read Snarky Remarks by Philip Riley, which is 230 words long.
I've also read Followup Questions by Philip Riley, which is 248 words long.
I've also read Scenery Supporters by Philip Riley, which is 179 words long.
I've also read Simple Conversation by Philip Riley, which is 2328 words long.
I've also read Hyperspace by Philip Riley, which is 15741 words long.
I've also read BOSH Facts by Philip Riley, which is 193 words long.
I've also read Swamp Park by Philip Riley, which is 7793 words long.
I've also read Margaret by Philip Riley, which is 2548 words long.
I've also read Enigma Lake by Philip Riley, which is 30813 words long.
I've also read I Can Dig It by Philip Riley, which is 77 words long.
I've also read BOSH Help by Philip Riley, which is 530 words long.
I've also read Overlook by Philip Riley, which is 763 words long.
I've also read Gender Options by Nathanael Nerode, which is 7679 words long.
I've also read Make Test by Philip Riley, which is 288 words long.
I've also read BOSH Hints by Philip Riley, which is 7427 words long.
I've also read Hearing by Philip Riley, which is 1254 words long.
I've also read PBR Common by Philip Riley, which is 109 words long.
I've also read Walls by Philip Riley, which is 905 words long.
I've also read Floors by Philip Riley, which is 913 words long.
I've also read Ceilings by Philip Riley, which is 1097 words long.
I've also read Can't Go That Way by Philip Riley, which is 815 words long.
I've also read Can't Take That by Philip Riley, which is 517 words long.
I've also read Scheduled People by Philip Riley, which is 164 words long.
I've also read Complex Listing by Emily Short, which is 3410 words long.
I've also read Options Paragraph by Philip Riley, which is 183 words long.
I've also read Door Varieties by Philip Riley, which is 299 words long.
I've also read Exit Lister by Eric Eve, which is 3510 words long.
I've also read Swimming by Philip Riley, which is 38 words long.
I've also read Secret Doors by Gavin Lambert, which is 272 words long.
I've also read Plugging by Philip Riley, which is 706 words long.
I've also read Books by Philip Riley, which is 2461 words long.
I've also read Container Types by Philip Riley, which is 55 words long.
I've also read Extension Cord by Philip Riley, which is 3151 words long.
I've also read State Update by Philip Riley, which is 406 words long.
I've also read Hints by Philip Riley, which is 888 words long.
I've also read Two-Sided Doors by Philip Riley, which is 2270 words long.


-----------------------------------------------------
Phase III ... Initialise language semantics
-----------------------------------------------------



-----------------------------------------------------
Phase IV ... Semantic analysis Ib
-----------------------------------------------------



-----------------------------------------------------
Phase V ... Semantic analysis II
-----------------------------------------------------



-----------------------------------------------------
Phase VI ... Semantic analysis III
-----------------------------------------------------



-----------------------------------------------------
Phase VII ... First pass through assertions
-----------------------------------------------------



-----------------------------------------------------
Phase VIII ... Second pass through assertions
-----------------------------------------------------



-----------------------------------------------------
Phase IX ... Making the model world
-----------------------------------------------------



-----------------------------------------------------
Phase X ... Tables and grammar
-----------------------------------------------------



-----------------------------------------------------
Phase XI ... Phrases and rules
-----------------------------------------------------

Regional: CONSTANT_VNT'field office area'-region(I258_field_office_area)(I164'field office area')
 == region
Regional: CONSTANT_VNT'field office area'-region(I258_field_office_area)(I164'field office area')
 == region
Regional: CONSTANT_VNT'hyperspace'-region(I243_hyperspace)(I149'hyperspace')
 == region
Regional: CONSTANT_VNT'elr'-region(I525_elr)(I415'elr')
 == region
Regional: CONSTANT_VNT'elr'-region(I525_elr)(I415'elr')
 == region
Regional: CONSTANT_VNT'elr'-region(I525_elr)(I415'elr')
 == region
Regional: CONSTANT_VNT'elr'-region(I525_elr)(I415'elr')
 == region
Regional: CONSTANT_VNT'elr'-region(I525_elr)(I415'elr')
 == region


-----------------------------------------------------
Phase XII ... Code generation
-----------------------------------------------------



==== Phase XII.1 ... Compiling the storage for the model world ====



==== Phase XII.2 ... Compiling the tables ====



==== Phase XII.3 ... Compiling the equations ====



==== Phase XII.4 ... Compiling the named action patterns ====



==== Phase XII.5 ... Compiling the action routines ====



==== Phase XII.6 ... Compiling first block of phrases ====

                                0 = action. 1 = object
                                0 = action. 1 = object
        Regional: CONSTANT_VNT'hyperspace'-region(I243_hyperspace)(I149'hyperspace')
         == region
        Regional: CONSTANT_VNT'hyperspace'-region(I243_hyperspace)(I149'hyperspace')
         == region
        Regional: CONSTANT_VNT'hyperspace'-region(I243_hyperspace)(I149'hyperspace')
         == region
        Regional: CONSTANT_VNT'hyperspace'-region(I243_hyperspace)(I149'hyperspace')
         == region
0 = object. 1 = number
0 = object. 1 = number
0 = object. 1 = number
0 = object. 1 = number
0 = object. 1 = number
                                        Fail: thing (~) number = nothing
                                        Fail: thing (~) number = nothing
        Regional: CONSTANT_VNT'hyperspace'-region(I243_hyperspace)(I149'hyperspace')
         == region
        Regional: CONSTANT_VNT'hyperspace'-region(I243_hyperspace)(I149'hyperspace')
         == region
        Regional: CONSTANT_VNT'the laundromat-region'-region(I418_laundromat_region)(I312'laundromat-region')
         == region
        Regional: CONSTANT_VNT'the laundromat-region'-region(I418_laundromat_region)(I312'laundromat-region')
         == region
        Regional: CONSTANT_VNT'hyperspace'-region(I243_hyperspace)(I149'hyperspace')
         == region
        Regional: CONSTANT_VNT'hyperspace'-region(I243_hyperspace)(I149'hyperspace')
         == region
        Regional: CONSTANT_VNT'elr'-region(I525_elr)(I415'elr')
         == region
        Regional: CONSTANT_VNT'elr'-region(I525_elr)(I415'elr')
         == region
        Regional: CONSTANT_VNT'elr'-region(I525_elr)(I415'elr')
         == region
        Regional: CONSTANT_VNT'elr'-region(I525_elr)(I415'elr')
         == region


==== Phase XII.7 ... Compiling the rulebooks ====



==== Phase XII.8 ... Compiling scene details ====



==== Phase XII.9 ... CTNL ====



==== Phase XII.10 ... Slashing grammar (G1) ====



==== Phase XII.11 ... Determining grammar (G2) ====

Regional: CONSTANT_VNT'elr'-region(I525_elr)(I415'elr')
 == region


==== Phase XII.12 ... Compiling GPR tokens for parsing various kinds of value ====



==== Phase XII.13 ... Compiling second block of phrases ====

                                                            Fail: room (~) real number = nothing
                                            Fail: nothing (~) real number = nothing
                                            Fail: room (~) real number = nothing
                                                            Fail: room (~) real number = nothing
                                            Fail: nothing (~) real number = nothing
                                            Fail: room (~) real number = nothing
        Regional: CONSTANT_VNT'hyperspace'-region(I243_hyperspace)(I149'hyperspace')
         == region
        Regional: CONSTANT_VNT'hyperspace'-region(I243_hyperspace)(I149'hyperspace')
         == region
                                                            Fail: list of numbers (~) number = nothing
                                            Fail: nothing (~) real number = nothing
                                            Fail: list of numbers (~) real number = nothing
                                                            Fail: list of numbers (~) number = nothing
                                            Fail: nothing (~) real number = nothing
                                            Fail: list of numbers (~) real number = nothing
                                                            Fail: list of numbers (~) number = nothing
                                            Fail: nothing (~) real number = nothing
                                            Fail: list of numbers (~) real number = nothing
                                                            Fail: list of numbers (~) number = nothing
                                            Fail: nothing (~) real number = nothing
                                            Fail: list of numbers (~) real number = nothing
                                                            Fail: list of numbers (~) number = nothing
                                            Fail: nothing (~) real number = nothing
                                            Fail: list of numbers (~) real number = nothing
                                                            Fail: list of numbers (~) number = nothing
                                            Fail: nothing (~) real number = nothing
                                            Fail: list of numbers (~) real number = nothing
                                        Fail: scene (~) number = nothing
                                        Fail: scene (~) number = nothing
                                0 = objects valued property. 1 = object
            Regional: CONSTANT_VNT'elr'-region(I525_elr)(I415'elr')
             == region
            Regional: CONSTANT_VNT'elr'-region(I525_elr)(I415'elr')
             == region


==== Phase XII.14 ... Compiling noun and scope filter tokens ====



==== Phase XII.15 ... Compiling chronology ====



==== Phase XII.16 ... Compiling I6 Verb directives ====



==== Phase XII.17 ... Slashing grammar (G1) ====



==== Phase XII.18 ... Determining grammar (G2) ====



==== Phase XII.19 ... Sorting and compiling non-value grammar (G3, G4) ====



==== Phase XII.20 ... Compiling noun and scope filter tokens ====



==== Phase XII.21 ... Compiling routines from predicate calculus ====

Providing for a total heap of 65536, given requirement of 44560


-----------------------------------------------------
Phase XIII ... Compilation now complete
-----------------------------------------------------

Total of 279 files written as streams.
CPU time: 1018 centiseconds


That concludes the debugging log from this run of Inform.
Its contents were as follows, and can be changed by placing
text like 'Include property creations in the debugging log.'
or 'Omit everything from the debugging log.' in the source.

Included:
  debugging log contents  debugging log inclusions
Omitted:
  action creations   action pattern compilation  action pattern parsing  assemblies    assertions    case insensitive filehandling
  conditions    constructed past participles  constructed plurals   description compilation   excerpt meanings   excerpt parsing 
  expressions    extensions census   figure creations   grammar    grammar construction   headings  
  implications    inferences    kind changes   kind checking   kind creations   lexical output 
  local variables   matching    meaning list allocation  memory allocation   noun resolution   object compilation 
  object creations   object tree   phrase comparisons   phrase compilation   phrase creations   phrase registration 
  phrase usage   predicate calculus   predicate calculus workings  pronouns    property creations   property provision 
  property translations   relation definitions   rule attachments   rulebook compilation   spatial map   spatial map workings
  specification permissions   specification usage   specificities    table construction   template reading   text substitutions 
  time periods   variable creations   verifications    vocabulary  
